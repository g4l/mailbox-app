class ContactsController{	constructor($scope, $log, ContactsDataSvc) {		this.$scope = $scope;		this.$log = $log;		this.ContactsDataSvc = ContactsDataSvc;		this.contacts = [];				this.getAllContacts();	}		getAllContacts() {		this.$scope.$emit('startLoading');		this.ContactsDataSvc.getAllContacts()			.then( contacts => {				this.contacts = contacts;				this.$scope.$emit('stopLoading');			})			.catch(error => {				this.$log.error("contacts component error >>>>>", error);				this.$scope.$emit('stopLoading');				this.$scope.$emit('showError', error.status + ' ' + error.statusText);						})	}		deleteContact(contactId) {		this.ContactsDataSvc.deleteContact(contactId).then( () => {								this.contacts = this.contacts.filter(i => i._id != contactId);		})		.catch(error => {			this.$log.error("contacts component error on delete contact >>>>>", error);					this.$scope.$emit('showError', error.status + ' ' + error.statusText);					})	}	createUser(user) {						this.$scope.$emit('startLoading');		this.ContactsDataSvc.createContact(user).then( (response) => {									this.contacts.push(response);			this.$scope.$emit('stopLoading');		})		.catch(error => {			this.$log.error("contacts component error on save contact >>>>>", error);			this.$scope.$emit('stopLoading');			this.$scope.$emit('showError', error.status + ' ' + error.statusText);					})  }}ContactsController.$inject = ['$scope', '$log', 'ContactsDataSvc'];export default ContactsController;